@using TheBlogProject.Models
@using TheBlogProject.Services
@using TheBlogProject.Enums
@using Microsoft.AspNetCore.Identity;
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common


@inject UserManager<BlogUser> userManager
@inject IImageService imageService

@model IPagedList<Post>



@if (Model.Count > 0)
{
    <div class="row gx-4 gx-lg-5 justify-content-center">
    @foreach (var post in Model)
    {
        //Is the logged in user the Author of this post??
        var isAuthor = false;
        if (User.Identity.IsAuthenticated)
        {
            isAuthor = (post.BlogUserId == userManager.GetUserId(User));
        }

        <div class="col-xs-2 col-md-4">
            <div class="card border-dark">
                <div class="card-body text-center">
                    <div class="bg-warning">
                        <hr class="card-hr" />
                        <h5 class="card-title">@post.Title</h5>
                        <hr class="card-hr" />
                    </div>
                    <div>
                        <p class="card-text">@post.Abstract</p>
                    </div>

                    <br />
                    <div class="text-center">
                        <a class="btn btn-dark  col-12 mb-2" asp-action="Details" asp-controller="Posts" asp-route-slug="@post.Slug">Read More</a>
                    </div>

                    @if (User.IsInRole(BlogRole.Administrator.ToString()) || isAuthor)
                    {
                        <div class="text-center">
                            <a class="btn btn-success col-12 border-dark" asp-action="Edit" asp-controller="Posts" asp-route-slug="@post.Slug">Edit Post</a>
                        </div>
                    }
                </div>
                <img class="card-img-bottom" src="@imageService.DecodeImage(post.ImageData,  post.ContentType)" />
            </div>

        </div>
    }
</div>

    <hr />

    <div class="row mt-4">
        <div class="col h3">
            Page @(
            Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber
            ) of @Model.PageCount
        </div>
    </div>
    <div class="row mt-3">
        <div class="col">
            @Html.PagedListPager(Model, page => Url.Action("BlogPostIndex", new { id = Model.FirstOrDefault().BlogId, page = page }),
        new PagedListRenderOptionsBase
        {
        LiElementClasses = new string[] { "page-item" },
        PageClasses = new string[] { "page-link" }
        })
        </div>
    </div>

}
else
{
    <h1 class="text-danger text-center">There are no posts to display!</h1>
    <div class="d-flex justify-content-center">
        <a class="btn btn-primary col-4 my-5" asp-action="Index" asp-controller="Home">
            Back to Home
        </a>
    </div>
}